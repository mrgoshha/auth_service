// Code generated by MockGen. DO NOT EDIT.
// Source: session_repository.go

// Package mock_dbs is a generated GoMock package.
package mock_dbs

import (
	model "AuthenticationService/internal/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRefreshSessionRepository is a mock of RefreshSessionRepository interface.
type MockRefreshSessionRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRefreshSessionRepositoryMockRecorder
}

// MockRefreshSessionRepositoryMockRecorder is the mock recorder for MockRefreshSessionRepository.
type MockRefreshSessionRepositoryMockRecorder struct {
	mock *MockRefreshSessionRepository
}

// NewMockRefreshSessionRepository creates a new mock instance.
func NewMockRefreshSessionRepository(ctrl *gomock.Controller) *MockRefreshSessionRepository {
	mock := &MockRefreshSessionRepository{ctrl: ctrl}
	mock.recorder = &MockRefreshSessionRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRefreshSessionRepository) EXPECT() *MockRefreshSessionRepositoryMockRecorder {
	return m.recorder
}

// CreateSession mocks base method.
func (m *MockRefreshSessionRepository) CreateSession(session *model.Session) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateSession", session)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateSession indicates an expected call of CreateSession.
func (mr *MockRefreshSessionRepositoryMockRecorder) CreateSession(session interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSession", reflect.TypeOf((*MockRefreshSessionRepository)(nil).CreateSession), session)
}

// GetSessionBySessionId mocks base method.
func (m *MockRefreshSessionRepository) GetSessionBySessionId(session string) (*model.Session, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSessionBySessionId", session)
	ret0, _ := ret[0].(*model.Session)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSessionBySessionId indicates an expected call of GetSessionBySessionId.
func (mr *MockRefreshSessionRepositoryMockRecorder) GetSessionBySessionId(session interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSessionBySessionId", reflect.TypeOf((*MockRefreshSessionRepository)(nil).GetSessionBySessionId), session)
}

// UpdateSession mocks base method.
func (m *MockRefreshSessionRepository) UpdateSession(update *model.Session) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateSession", update)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateSession indicates an expected call of UpdateSession.
func (mr *MockRefreshSessionRepositoryMockRecorder) UpdateSession(update interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateSession", reflect.TypeOf((*MockRefreshSessionRepository)(nil).UpdateSession), update)
}
